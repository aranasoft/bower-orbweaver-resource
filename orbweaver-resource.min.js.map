{"version":3,"sources":["orbweaver-resource.js"],"names":["window","angular","undefined","orbResourceMinErr","$$minErr","orbweaver","module","provider","RestfulResourceProvider","this","defaults","options","idProperty","saveAsCreateOrUpdate","actions","update","method","create","$get","$resource","restfulResourceFactory","url","params","extend","isFunction","resource","prototype","$save","success","error","result","save","call","$promise","a1","a2","a3","a4","data","arguments","length","RestfulServiceProvider","$resourceProvider","orbRestfulResourceProvider","$q","orbRestfulResource","restfulServiceFactory","RestfulService","forEach","isDefined","isObject","empty","arg1","arg2","arg3","arg4","apply","action","name","hasBody","test","arg5","identity","identityParams"],"mappings":"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","file":"orbweaver-resource.min.js","sourcesContent":["/**\n * orbweaver v1.0.0-beta.1\n * @copyright 2013-2017 Arana Software <info@aranasoft.com>. https://github.com/aranasoft/orbweaver\n * @license BSD-3-Clause\n */\n\n(function (window, angular, undefined) {\n  'use strict';\n\n  var orbResourceMinErr = angular.$$minErr('orbResource');\n  var orbweaver = angular.module('orbResource', ['ngResource']);\n\n  orbweaver.provider('orbRestfulResource', function RestfulResourceProvider() {\n    var provider = this;\n\n    this.defaults = {\n      options: {\n        idProperty: 'id',\n        saveAsCreateOrUpdate: true\n      },\n      actions: {\n        update: {method: 'PUT'},\n        create: {method: 'POST'}\n      }\n    };\n\n    this.$get = ['$resource', function ($resource) {\n      function restfulResourceFactory (url, params, actions, options) {\n        var extend = angular.extend,\n          isFunction = angular.isFunction;\n\n        actions = extend({}, provider.defaults.actions, actions);\n        options = extend({}, provider.defaults.options, options);\n\n        var resource = $resource(url, params, actions, options);\n        resource.idProperty = options.idProperty;\n\n        if (options.saveAsCreateOrUpdate !== false) {\n          resource.prototype.$save = function (params, success, error) {\n            if (isFunction(params)) {\n              error = success; success = params; params = {};\n            }\n            var result = resource.save.call(this, params, this, success, error);\n            return result.$promise || result;\n          };\n          resource.save = function(a1, a2, a3, a4) {\n            var params = {}, data, success, error;\n\n            switch (arguments.length) {\n              case 4:\n                error = a4;\n                success = a3;\n                /* falls through */\n              case 3:\n              case 2:\n                if (isFunction(a2)) {\n                  if (isFunction(a1)) {\n                    throw orbResourceMinErr('badargs',\n                      'Expected between first argument to not be a function [[params,] data, [success [, error]]]');\n                  }\n\n                  success = a2;\n                  error = a3;\n                } else {\n                  params = a1;\n                  data = a2;\n                  success = a3;\n                  break;\n                }\n                /* falls through */\n              case 1:\n                data = a1;\n                break;\n              default:\n                throw orbResourceMinErr('badargs',\n                  'Expected between 1 and 4 arguments [[params,] data, [success [, error]]], got {0} arguments',\n                  arguments.length);\n            }\n\n            var method;\n            if (!data[this.idProperty]) {\n              method = 'create';\n            } else {\n              method = 'update';\n            }\n            return resource[method].call(this, params, data, success, error);\n          };\n        }\n\n        return resource;\n      }\n\n      return restfulResourceFactory;\n    }];\n  });\n\n  orbweaver.provider('orbRestfulService', ['$resourceProvider', 'orbRestfulResourceProvider', function RestfulServiceProvider($resourceProvider, orbRestfulResourceProvider) {\n    this.$get = ['$q', 'orbRestfulResource', function ($q, orbRestfulResource) {\n      function restfulServiceFactory(url, params, actions, options) {\n        var extend = angular.extend,\n          forEach = angular.forEach,\n          isDefined = angular.isDefined,\n          isFunction = angular.isFunction,\n          isObject = angular.isObject;\n\n        actions = extend({}, $resourceProvider.defaults.actions, orbRestfulResourceProvider.defaults.actions, actions);\n        options = extend({}, orbRestfulResourceProvider.defaults.options, options);\n\n        var resource = new orbRestfulResource(url, params, actions, options);\n\n        function RestfulService() {\n          return new resource();\n        }\n\n        RestfulService.empty = function() {\n          return new resource();\n        };\n\n        if (options.saveAsCreateOrUpdate !== false) {\n          RestfulService.save = function (arg1, arg2, arg3, arg4) {\n            var params = {}, data, success, error;\n\n            switch (arguments.length) {\n              case 4:\n                error = arg4;\n                success = arg3;\n                /* falls through */\n              case 3:\n              case 2:\n                if (isFunction(arg2)) {\n                  if (isFunction(arg1)) {\n                    throw orbResourceMinErr('badargs',\n                      'Expected first argument to not be a function [[params,] data, [success [, error]]]');\n                  }\n\n                  data = arg1;\n                  success = arg2;\n                  error = arg3;\n                } else {\n                  params = arg1;\n                  data = arg2;\n                  success = arg3;\n                }\n                break;\n              case 1:\n                if (isFunction(arg1)) {\n                  throw orbResourceMinErr('badargs',\n                    'Expected first argument to not be a function [[params,] data, [success [, error]]]');\n                }\n                data = arg1;\n                break;\n              default:\n                throw orbResourceMinErr('badargs',\n                  'Expected between 1 and 4 arguments [[params,] data, [success [, error]]], got {0} arguments',\n                  arguments.length);\n            }\n\n            var result;\n            if (isDefined(data[options.idProperty])) {\n              result = resource.update.apply(this, arguments);\n            } else {\n              result = resource.create.apply(this, arguments);\n            }\n            return result.$promise || result;\n\n          };\n        }\n\n        forEach(actions, function(action, name) {\n          var hasBody = action.hasBody === true || (action.hasBody !== false && /^(POST|PUT|PATCH)$/i.test(action.method));\n\n          RestfulService[name] = function(arg1, arg2, arg3, arg4, arg5) {\n            var identity, params = {}, data, success, error;\n\n            switch (arguments.length) {\n              case 5:\n              case 4:\n                if (isFunction(arg3)) {\n                  success = arg3;\n                  error = arg4;\n                } else {\n                  success = arg4;\n                  error = arg5;\n                }\n                /* falls through */\n              case 3:\n                if (isFunction(arg2)) {\n                  error = arg3;\n                  success = arg2;\n                  data = arg1;\n                } else if (isFunction(arg3)) {\n                  error = arg4;\n                  success = arg3;\n                  data = arg2;\n                  if (isObject(arg1)) {\n                    params = arg1;\n                  } else {\n                    identity = arg1;\n                  }\n                } else {\n                  data = arg3;\n                  params = arg2;\n                  identity = arg1;\n                }\n                break;\n              case 2:\n                if (isFunction(arg2)) {\n                  if (isFunction(arg1)) {\n                    error = arg2;\n                  } else {\n                    success = arg2;\n                  }\n                } else {\n                  if (hasBody) {\n                    data = arg2;\n                    if (isObject(arg1)) {\n                      params = arg1;\n                    } else {\n                      identity = arg1;\n                    }\n                  } else {\n                    params = arg2;\n                    identity = arg1;\n                  }\n                  break;\n                }\n                /* falls through */\n              case 1:\n                if (isFunction(arg1)) {\n                  success = arg1;\n                } else if (hasBody) {\n                  data = arg1;\n                } else if (isObject(arg1)) {\n                  params = arg1;\n                } else {\n                  identity = arg1;\n                }\n                break;\n              case 0: break;\n              default:\n                throw orbResourceMinErr('badargs',\n                  'Expected between 1 and 5 arguments [[id,] [params,] data, [success [, error]]], got {0} arguments',\n                  arguments.length);\n            }\n\n            if (isDefined(identity)) {\n              var identityParams = {};\n              identityParams[options.idProperty] = identity;\n              params = extend({}, params, identityParams);\n            }\n\n            var result = resource[name](params, data, success, error);\n            return result.$promise || result;\n          };\n        });\n\n        return RestfulService;\n      }\n\n      return restfulServiceFactory;\n    }];\n  }]);\n})(window, window.angular);\n"]}